#!/bin/bash
set -e

if [[ -z "${OUT}" ]]; then
  echo "\$OUT Environment variable not set. please brunch first."
  exit
fi

if [[ -z "${LINEAGE_BUILD}" ]]; then
  echo "\$LINEAGE_BUILD Environment variable not set. please brunch first."
  exit
fi

if ! command -v gh &> /dev/null
then
  echo "gh command could not be found. please install gh."
  exit
fi

GH_AUTH_CHECK=`gh auth status`
SUB='You are not logged'
if [[ "$GH_AUTH_CHECK" == *"$SUB"* ]]; then
  echo "You are not logged into any GitHub hosts. Run gh auth login to authenticate."
  exit
fi

GIT_REMOTE_CHECK=`git remote show origin`
SUB='fatal:'
if [[ "$GIT_REMOTE_CHECK" == *"$SUB"* ]]; then
  echo "git remote - origin not exist. Please add remote by the name of origin."
  exit
fi

if ! command -v md5sum &> /dev/null
then
  echo "md5sum command could not be found. please install md5sum."
  exit
fi

for file in $OUT/lineage-*-*-UNOFFICIAL-jackpotlte.zip
do
  LINEAGE_RELEASE="${file}"
done

if [ ! -f "$LINEAGE_RELEASE" ]; then
  echo "ERROR! $LINEAGE_RELEASE file does not exist. please build tree completely first."
  exit
fi
echo "TARGET FILE: $LINEAGE_RELEASE"

LINEAGE_RELEASE_MD5SUM="$LINEAGE_RELEASE.md5sum"
if [ ! -f "$LINEAGE_RELEASE_MD5SUM" ]; then
  echo "ERROR! $LINEAGE_RELEASE_MD5SUM file does not exist!"
  exit
fi
echo "TARGET MD5SUM FILE: $LINEAGE_RELEASE_MD5SUM"

LINEAGE_MD5SUM="$OUT/checksum.md5sum"
cp $LINEAGE_RELEASE_MD5SUM $LINEAGE_MD5SUM
PREV_PWD=$PWD
cd $OUT/system
md5sum build.prop >> $LINEAGE_MD5SUM
cd $PREV_PWD
echo "TARGET CREATED MD5SUM FILE: $LINEAGE_MD5SUM"

LINEAGE_RELEASE_PROP="$OUT/system/build.prop"
if [ ! -f "$LINEAGE_RELEASE_PROP" ]; then
  echo "ERROR! $LINEAGE_RELEASE_PROP file does not exist!"
  exit
fi
echo "TARGET PROP FILE: $LINEAGE_RELEASE_PROP"
echo

DATE=`date -u`
FORMATTED_DATE=`date -u +%Y%m%d`
RELEASE_FILENAME="${LINEAGE_RELEASE#*${OUT}/}"
SUB="-UNOFFICIAL"
RELEASE_TITLE="${RELEASE_FILENAME%${SUB}*}-$LINEAGE_BUILD"

echo "[*] Release Title: $RELEASE_TITLE"
echo "[*] File Uploading..."

set +e
git tag -d $FORMATTED_DATE 2> /dev/null
git tag $FORMATTED_DATE
git push origin $FORMATTED_DATE
set -e

set -x
gh release create -t "$RELEASE_TITLE" -n 'Auto-generated by `releasetools.sh` at '"`date -u`". --generate-notes --target "`git rev-list --max-count=1 HEAD`" $FORMATTED_DATE $LINEAGE_RELEASE $LINEAGE_MD5SUM $LINEAGE_RELEASE_PROP

exit
